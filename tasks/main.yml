  - name: Make sure we have a 'wheel' group
    group:
      name: wheel
      state: present

  - name: Allow 'wheel' group to have passwordless sudo
    lineinfile:
      dest: /etc/sudoers
      state: present
      regexp: '^%wheel'
      line: '%wheel ALL=(ALL) NOPASSWD: ALL'
      validate: 'visudo -cf %s'

  - name: Create Kubernetes group
    group: name=Kubernetes gid=1002 state=present

  - name: Create Kubernetes user
    user: name=Kubernetes uid=1001 group={{ item }} state=present append=yes shell=/bin/bash
    with_items:
      - Kubernetes
      - wheel

  - name: Setup Bridge networking
    copy: src={{ item.src }} dest={{ item.dest }} owner=root group=root
    with_items:
      - { src: modules-k8s.conf, dest: /etc/modules-load.d/k8s.conf }
      - { src: sysctl-k8s.conf, dest: /etc/sysctl.d/k8s.conf }
    register: network

  - shell: sysctl --system
    become: yes
    when: network.changed

  - name: Install required packeges
    apt: name={{ item }} state=latest
    loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'gnupg2']

  - name: Add Docker's official GPG Key
    apt_key: url=https://download.docker.com/linux/ubuntu/gpg state=present

  - name: Add Docker's repository
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
      state: present
      update_cache: yes

  - name: Install conatiner runtime
    apt: name="{{ item.name }}={{ item.version }}" state=present force=true
    with_items:
      - { name: 'containerd.io', version: '1.2.13-2' }
      - { name: 'docker-ce', version: '5:19.03.11~3-0~ubuntu-focal' }
      - { name: 'docker-ce-cli', version: '5:19.03.11~3-0~ubuntu-focal' }

  - name: Ensure docker directory exists
    file: path=/etc/docker state=directory

  - name: Create docker daemon
    copy: src=daemon.json dest=/etc/docker/daemon.json owner=root group=root mode=0644
    register: docker_service

  - name: Ensure docker service exists
    file: path=/etc/systemd/system/docker.service.d state=directory
    register: docker_service

  - name: Kubernetes GPG Key
    apt_key: url=https://packages.cloud.google.com/apt/doc/apt-key.gpg state=present

  - name: Kubernetes Repository
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      update_cache: yes

  - name: Install kube-packages
    apt: name={{ item }} state=latest
    loop: [ 'kubelet', 'kubeadm', 'kubectl' ]
    notify: kubelet_daemon

  - name: Mark kube-packages on hold
    dpkg_selections: name={{ item }} selection=hold
    loop: [ 'kubelet', 'kubeadm', 'kubectl' ]

  - include_tasks: kubernetes-master.yml
    when: kubernetes_role == 'master'

  - name: Get the kubeadm join command from the Kubernetes master.
    command: kubeadm token create --print-join-command
    changed_when: false
    when: kubernetes_role == 'master'
    register: kubernetes_join_command_result

  - name: Set the kubeadm join command globally.
    set_fact:
      kubernetes_join_command: >
        {{ kubernetes_join_command_result.stdout }}
    when: kubernetes_join_command_result.stdout is defined
    delegate_to: "{{ item }}"
    delegate_facts: true
    with_items: "{{ groups['kubernetes_nodes'] }}"

  - include_tasks: kubernetes-nodes.yml
    when: kubernetes_role == 'node'